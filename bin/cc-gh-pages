#!/bin/bash

dirname=${0%/*}
source $dirname/private/run
source $dirname/private/select_remote_repo

###
# @public
# - re-checks version
# - uses OAuth token if given
# - checkouts release branch
# - modify .gitignore
# - commits and creates a tag into github
###
main () {

    if [[ ! -n "$CREATE_GH_PAGES" ]]; then
        show_how_to_create_gh_pages
        return
    fi

    run npm run gh-pages

    remote=`select_remote_repo`

    run git checkout --orphan gh-pages

    if [[ -n "$GH_PAGES_DIR" ]]; then

        run git reset
        add_circle_yml
        run git add $GH_PAGES_DIR
        run git clean -fdx

        for file in `ls $GH_PAGES_DIR`; do

            run git mv $GH_PAGES_DIR/$file .
        done
    else
        show_how_to_set_dir

    fi

    run git commit -m "gh-pages"
    run git push --force $remote gh-pages
}

add_circle_yml () {
    run cp src/gh-pages.yml circle.yml
    run git add circle.yml
}

show_how_to_create_gh_pages () {
        echo "
    gh-pages is not created because \$CREATE_GH_PAGES is not set.
    Set 'create-gh-pages' to true at your package.json, then CircleCI creates the branch.
" >&2
}


show_how_to_set_dir () {

    echo "
    All files in master branch are added to gh-pages.

    Set 'gh-pages-dir' at your package.json, then only the contents of
    the directory are added to gh-pages.
" >&2
}

main
