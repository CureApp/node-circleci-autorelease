#!/bin/bash

dirname=${0%/*}
source $dirname/private/run
source $dirname/private/select_remote_repo

###
# @public
# - re-checks version
# - uses OAuth token if given
# - checkouts release branch
# - modify .gitignore
# - commits and creates a tag into github
###
main () {

    version=`$dirname/cc-get-version-from-log`
    version=$VERSION_PREFIX$version

    remote=`select_remote_repo`

    run git checkout -b release-$version

    $dirname/cc-get-ignore-files > .gitignore

    run git add -A
    run git commit -m $version
    run git tag $version
    run git push --force $remote $version

    push_release_branch $remote

    publish_npm

    run npm run post-release

    run git checkout $CIRCLE_BRANCH
}

push_release_branch () {

    remote=$1

    if [[ -n "$CREATE_BRANCH" ]]; then
        run git push --force $remote release-$version
    else
        echo -e "release branch was not generated. Set 'create-branch' field to true at package.json." >&2
    fi
}


###
# @private
# publish npm if environment variables 'NPMRC' exists
# @function publish_npm
###
publish_npm () {

    if [[ -n "$NPM_AUTH" && -n "$NPM_EMAIL" ]]; then
        echo "_auth=$NPM_AUTH" >> ~/.npmrc
        echo "email=$NPM_EMAIL" >> ~/.npmrc

        run npm publish

    else
        echo "'npm publish' was skipped as NPM_AUTH and NPM_EMAIL are not set." >&2
        # show_how_to_publish_npm
    fi
}


show_how_to_publish_npm () {
    echo "
    'npm publish' was not executed as \$NPM_AUTH and \$NPM_EMAIL environment variables does not exist.

    Set it at
        https://circleci.com/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/edit#env-vars

    Name: NPM_AUTH
    Value: (value of '_auth' at your .npmrc)

    Name: NPM_EMAIL
    Value: (value of 'email' at your .npmrc)

" >&2
}

main
